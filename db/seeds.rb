# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).
#
# Examples:
#
#   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])
#   Mayor.create(name: 'Emanuel', city: cities.first)

accident_types = [
	{accident: "Acidente de Viação"},
	{accident: "Atropelamento"},
	{accident: "Falhas Mecânicas"},
	{accident: "Furto/Roubo"},
	{accident: "Incêndio"},
	{accident: "Quebra de vidros"}
] 

accident_types.each do |attributes|
  AccidentType.where(accident: attributes[:accident]).first_or_initialize.tap do |t|
  t.save!
  end
end


countries = [
	{country: "África do Sul"},
	{country: "Albânia"},
	{country: "Alemanha"},
	{country: "Alto Volta"},
	{country: "Andorra"},
	{country: "Angola"},
	{country: "Antígua"},
	{country: "Antilhas"},
	{country: "Arábia Saudita"},
	{country: "Argélia"},
	{country: "Argentina"},
	{country: "Austrália"},
	{country: "Áustria"},
	{country: "Bahamas"},
	{country: "Bahrein"},
	{country: "Bangladesh"},
	{country: "Barbados"},
	{country: "Bélgica"},
	{country: "Belize"},
	{country: "Benim"},
	{country: "Bermudas"},
	{country: "Bielorrusia"},
	{country: "Birmânia"},
	{country: "Bolívia"},
	{country: "Botswana"},
	{country: "Brasil"},
	{country: "Brunei"},
	{country: "Bulgária"},
	{country: "Burkina Faso"},
	{country: "Burundi"},
	{country: "Butão"},
	{country: "Cabo Verde"},
	{country: "Camarões"},
	{country: "Cambodja"},
	{country: "Canadá"},
	{country: "Chade"},
	{country: "Chile"},
	{country: "China (Formosa)"},
	{country: "Chipre"},
	{country: "Colômbia"},
	{country: "Congo"},
	{country: "Coreia do Norte"},
	{country: "Coreia do Sul"},
	{country: "Costa do Marfim"},
	{country: "Costa Rica"},
	{country: "Cuba"},
	{country: "Dinamarca"},
	{country: "Djibouti"},
	{country: "Dominica"},
	{country: "Egipto"},
	{country: "El Salvador"},
	{country: "Emiratos Árabes Unidos"},
	{country: "Equador"},
	{country: "Eslovaquia"},
	{country: "Eslovenia"},
	{country: "Espanha"},
	{country: "Estados Unidos"},
	{country: "Estónia"},
	{country: "Etiópia"},
	{country: "Federação Russa"},
	{country: "Filipinas"},
	{country: "Finlândia"},
	{country: "França"},
	{country: "Gabão"},
	{country: "Gâmbia"},
	{country: "Ghana"},
	{country: "Gibraltar"},
	{country: "Grã-Bretanha"},
	{country: "Granada"},
	{country: "Grécia"},
	{country: "Guatemala"},
	{country: "Guiana"},
	{country: "Guiana Francesa"},
	{country: "Guiné"},
	{country: "Guiné Equatorial"},
	{country: "Guiné-Bissau"},
	{country: "Haiti"},
	{country: "Holanda"},
	{country: "Honduras"},
	{country: "Hungria"},
	{country: "Iémen"},
	{country: "Iémen do Sul"},
	{country: "Índia"},
	{country: "Indonésia"},
	{country: "Irão"},
	{country: "Iraque"},
	{country: "Irlanda"},
	{country: "Islândia"},
	{country: "Israel"},
	{country: "Itália"},
	{country: "Jamaica"},
	{country: "Japão"},
	{country: "Jordânia"},
	{country: "Jugoslávia"},
	{country: "Koweit"},
	{country: "Laos"},
	{country: "Lesoto"},
	{country: "Letonia"},
	{country: "Líbano"},
	{country: "Libéria"},
	{country: "Líbia"},
	{country: "Liechtenstein"},
	{country: "Lituania"},
	{country: "Luxemburgo"},
	{country: "Macau"},
	{country: "Madagáscar"},
	{country: "Malásia"},
	{country: "Malawi"},
	{country: "Maldivas"},
	{country: "Mali"},
	{country: "Malta"},
	{country: "Marrocos"},
	{country: "Mauricias"},
	{country: "Mauritânia"},
	{country: "México"},
	{country: "Moçambique"},
	{country: "Mónaco"},
	{country: "Mongólia"},
	{country: "Namíbia"},
	{country: "Nepal"},
	{country: "Nicarágua"},
	{country: "Níger"},
	{country: "Nigéria"},
	{country: "Noruega"},
	{country: "Nova Guiné"},
	{country: "Nova Zelândia"},
	{country: "Omã"},
	{country: "Panamá"},
	{country: "Paquistão"},
	{country: "Paraguai"},
	{country: "Peru"},
	{country: "Polónia"},
	{country: "Portugal"},
	{country: "Qatar"},
	{country: "Quénia"},
	{country: "Rep. Centro-Africana"},
	{country: "Rep. Dominicana"},
	{country: "Rep. Popular China"},
	{country: "República Checa"},
	{country: "Roménia"},
	{country: "Ruanda"},
	{country: "S. Marinho"},
	{country: "S. Tomé e Príncipe"},
	{country: "Senegal"},
	{country: "Serra Leoa"},
	{country: "Seychelles"},
	{country: "Singapura"},
	{country: "Síria"},
	{country: "Somália"},
	{country: "Sri Lanka"},
	{country: "Suazilândia"},
	{country: "Sudão"},
	{country: "Suécia"},
	{country: "Suiça"},
	{country: "Suriname"},
	{country: "Tailândia"},
	{country: "Tanzânia"},
	{country: "Timor Leste"},
	{country: "Togo"},
	{country: "Trinidad e Tobago"},
	{country: "Tunísia"},
	{country: "Turquia"},
	{country: "Ucrânia"},
	{country: "Uganda"},
	{country: "Uruguai"},
	{country: "Vaticano"},
	{country: "Venezuela"},
	{country: "Vietname"},
	{country: "Zaire"},
	{country: "Zâmbia"},
	{country: "Zimbabwé"}
]

countries.each do |attributes|
  Country.where(country: attributes[:country]).first_or_initialize.tap do |a|
  a.save!
  end
end

vehicle_categories = [
	{category: "Ambulancia ligeiro"},
	{category: "Auto Caravana"},
	{category: "Autocarro ate 20 lugares"},
	{category: "Autocarro com mais 20 lugares"},
	{category: "Camiao ate 20 Ton PB"},
	{category: "Camiao com mais 20 Ton PB"},
	{category: "Ciclomotor"},
	{category: "Ligeiro bombeiros"},
	{category: "Ligeiro de instruçao"},
	{category: "Ligeiro mercadorias"},
	{category: "Ligeiro passageiros"},
	{category: "Motociclo"},
	{category: "Motociclo ciclomotor instruçao"},
	{category: "Pesado bombeiros"},
	{category: "Pesado de instruçao"},
	{category: "Reboque agricola"},
	{category: "Transporte colectivo urbano"},
	{category: "Veiculo classico"}
]

vehicle_categories.each do |attributes|
  VehicleCategory.where(category: attributes[:category]).first_or_initialize.tap do |c|
  c.save!
  end
end


driver_licenses = [
	{category: "A - Carta de Motociclos"},
	{category: "A1 - Carta de Ciclomotores"},
	{category: "B - Carta de Ligeiros até 3500 Kg."},
	{category: "B1 - Triciclos e quadriciclos"},
	{category: "BE - Carta de Ligeiros &gt; 3500 Kg."},
	{category: "C - Carta de Pesados Mercadorias"},
	{category: "C1 - Pesados de mercadorias &lt; 7500 kg"},
	{category: "CE - Carta Pesados Mercadorias c/Reboque P.B &gt; 750 Kg"},
	{category: "D - Carta de Pesados Passageiros"},
	{category: "D1 - Pesados de passageiros até 17 lugares"},
	{category: "DE - Carta Pesados Passageiros c/Reboque P.B &gt; 750 Kg"},
	{category: "L1 - Licença de Condução Ciclomotores &lt; 50 cm3"},
	{category: "L2 - Licença de Condução Veículos Agricolas"},
	{category: "TC - C1E - Tractor C c/ reboque &lt; 12000 kg"},
	{category: "TD - D1E-Tractor D c/ reboque &lt; 12000 kg"}
]

driver_licenses.each do |attributes|
  DriverLicense.where(category: attributes[:category]).first_or_initialize.tap do |l|
  l.save!
  end
end



zones = [

	{zone: "ABRANTES"},
	{zone: "AGUEDA"},
	{zone: "AGUIAR DA BEIRA"},
	{zone: "ALANDROAL"},
	{zone: "ALBERGARIA-A-VELHA"},
	{zone: "ALBUFEIRA"},
	{zone: "ALCACER DO SAL"},
	{zone: "ALCANENA"},
	{zone: "ALCOBACA"},
	{zone: "ALCOCHETE"},
	{zone: "ALCOUTIM"},
	{zone: "ALENQUER"},
	{zone: "ALFANDEGA DA FE"},
	{zone: "ALIJO"},
	{zone: "ALJEZUR"},
	{zone: "ALJUSTREL"},
	{zone: "ALMADA"},
	{zone: "ALMEIDA"},
	{zone: "ALMEIRIM"},
	{zone: "ALMODOVAR"},
	{zone: "ALPIARCA"},
	{zone: "ALPORTEL"},
	{zone: "ALTER DO CHAO"},
	{zone: "ALVAIAZERE"},
	{zone: "ALVITO"},
	{zone: "AMADORA"},
	{zone: "AMARANTE"},
	{zone: "AMARES"},
	{zone: "ANADIA"},
	{zone: "ANGRA DO HEROISMO"},
	{zone: "ANSIAO"},
	{zone: "ARCOS DE VALDEVEZ"},
	{zone: "ARGANIL"},
	{zone: "ARMAMAR"},
	{zone: "AROUCA"},
	{zone: "ARRAIOLOS"},
	{zone: "ARRONCHES"},
	{zone: "ARRUDA DOS VINHOS"},
	{zone: "AVEIRO"},
	{zone: "AVIS"},
	{zone: "AZAMBUJA"},
	{zone: "BAIAO"},
	{zone: "BARCELOS"},
	{zone: "BARRANCOS"},
	{zone: "BARREIRO"},
	{zone: "BATALHA"},
	{zone: "BEJA"},
	{zone: "BELMONTE"},
	{zone: "BENAVENTE"},
	{zone: "BOMBARRAL"},
	{zone: "BORBA"},
	{zone: "BOTICAS"},
	{zone: "BRAGA"},
	{zone: "BRAGANCA"},
	{zone: "CABECEIRAS DE BASTO"},
	{zone: "CADAVAL"},
	{zone: "CALDAS DA RAINHA"},
	{zone: "CALHETA (FUNCHAL)"},
	{zone: "CALHETA, S.JORGE  (A. HEROISMO)"},
	{zone: "CAMARA DE LOBOS (FUNCHAL)"},
	{zone: "CAMINHA"},
	{zone: "CAMPO MAIOR"},
	{zone: "CANTANHEDE"},
	{zone: "CARRAZEDA DE ANSIAES"},
	{zone: "CARREGAL DO SAL"},
	{zone: "CARTAXO"},
	{zone: "CASCAIS"},
	{zone: "CASTANHEIRA DE PERA"},
	{zone: "CASTELO BRANCO"},
	{zone: "CASTELO DE PAIVA"},
	{zone: "CASTELO DE VIDE"},
	{zone: "CASTRO DAIRE"},
	{zone: "CASTRO MARIM"},
	{zone: "CASTRO VERDE"},
	{zone: "CELORICO DA BEIRA"},
	{zone: "CELORICO DE BASTO"},
	{zone: "CHAMUSCA"},
	{zone: "CHAVES"},
	{zone: "CINFAES"},
	{zone: "COIMBRA"},
	{zone: "CONDEIXA-A-NOVA"},
	{zone: "CONSTANCIA"},
	{zone: "CORUCHE"},
	{zone: "CORVO (HORTA)"},
	{zone: "COVILHA"},
	{zone: "CRATO"},
	{zone: "CUBA"},
	{zone: "ELVAS"},
	{zone: "ENTRONCAMENTO"},
	{zone: "ESPINHO"},
	{zone: "ESPOSENDE"},
	{zone: "ESTARREJA"},
	{zone: "ESTREMOZ"},
	{zone: "EVORA"},
	{zone: "FAFE"},
	{zone: "FARO"},
	{zone: "FEIRA"},
	{zone: "FELGUEIRAS"},
	{zone: "FERREIRA  DO ZEZERE"},
	{zone: "FERREIRA DO ALENTEJO"},
	{zone: "FIGUEIRA DA FOZ"},
	{zone: "FIGUEIRA DE CASTELO RODRIGO"},
	{zone: "FIGUEIRO DOS VINHOS"},
	{zone: "FORNOS DE ALGODRES"},
	{zone: "FREIXO DE ESPADA-A-CINTA"},
	{zone: "FRONTEIRA"},
	{zone: "FUNCHAL"},
	{zone: "FUNDAO"},
	{zone: "GAVIAO"},
	{zone: "GOIS"},
	{zone: "GOLEGA"},
	{zone: "GONDOMAR"},
	{zone: "GOUVEIA"},
	{zone: "GRANDOLA"},
	{zone: "GUARDA"},
	{zone: "GUIMARAES"},
	{zone: "HORTA"},
	{zone: "IDANHA-A-NOVA"},
	{zone: "ILHAVO"},
	{zone: "LAGOA (FARO)"},
	{zone: "LAGOA (PONTA DELGADA)"},
	{zone: "LAGOS"},
	{zone: "LAJES DAS FLORES (HORTA)"},
	{zone: "LAJES DO PICO"},
	{zone: "LAMEGO"},
	{zone: "LEIRIA"},
	{zone: "LISBOA"},
	{zone: "LOULE"},
	{zone: "LOURES"},
	{zone: "LOURINHA"},
	{zone: "LOUSA"},
	{zone: "LOUSADA"},
	{zone: "MACAO"},
	{zone: "MACEDO DE CAVALEIROS"},
	{zone: "MACHICO (FUNCHAL)"},
	{zone: "MADALENA (HORTA)"},
	{zone: "MAFRA"},
	{zone: "MAIA"},
	{zone: "MANGUALDE"},
	{zone: "MANTEIGAS"},
	{zone: "MARCO DE CANAVEZES"},
	{zone: "MARINHA GRANDE"},
	{zone: "MARVAO"},
	{zone: "MATOSINHOS"},
	{zone: "MEALHADA"},
	{zone: "MEDA"},
	{zone: "MELGACO"},
	{zone: "MERTOLA"},
	{zone: "MESAO FRIO"},
	{zone: "MIRA"},
	{zone: "MIRANDA DO CORVO"},
	{zone: "MIRANDA DO DOURO"},
	{zone: "MIRANDELA"},
	{zone: "MOGADOURO"},
	{zone: "MOIMENTA DA BEIRA"},
	{zone: "MOITA"},
	{zone: "MONCAO"},
	{zone: "MONCHIQUE"},
	{zone: "MONDIM DE BASTO"},
	{zone: "MONFORTE"},
	{zone: "MONTALEGRE"},
	{zone: "MONTEMOR-O-NOVO"},
	{zone: "MONTEMOR-O-VELHO"},
	{zone: "MONTIJO"},
	{zone: "MORA"},
	{zone: "MORTAGUA"},
	{zone: "MOURA"},
	{zone: "MOURAO"},
	{zone: "MURCA"},
	{zone: "MURTOSA"},
	{zone: "NAZARE"},
	{zone: "NELAS"},
	{zone: "NISA"},
	{zone: "NORDESTE (PONTA DELGADA)"},
	{zone: "OBIDOS"},
	{zone: "ODEMIRA"},
	{zone: "ODIVELAS"},
	{zone: "OEIRAS"},
	{zone: "OLEIROS"},
	{zone: "OLHAO"},
	{zone: "OLIVEIRA AZEMEIS"},
	{zone: "OLIVEIRA DE FRADES"},
	{zone: "OLIVEIRA DO BAIRRO"},
	{zone: "OLIVEIRA DO HOSPITAL"},
	{zone: "OURIQUE"},
	{zone: "OVAR"},
	{zone: "PACOS DE FERREIRA"},
	{zone: "PALMELA"},
	{zone: "PAMPILHOSA DA SERRA"},
	{zone: "PAREDES"},
	{zone: "PAREDES DE COURA"},
	{zone: "PEDROGAO GRANDE"},
	{zone: "PENACOVA"},
	{zone: "PENAFIEL"},
	{zone: "PENALVA DO CASTELO"},
	{zone: "PENAMACOR"},
	{zone: "PENEDONO"},
	{zone: "PENELA"},
	{zone: "PENICHE"},
	{zone: "PESO DA REGUA"},
	{zone: "PINHEL"},
	{zone: "POIARES"},
	{zone: "POMBAL"},
	{zone: "PONTA DELGADA"},
	{zone: "PONTA DO SOL (FUNCHAL)"},
	{zone: "PONTE DA BARCA"},
	{zone: "PONTE DE LIMA"},
	{zone: "PONTE DE SOR"},
	{zone: "PORTALEGRE"},
	{zone: "PORTEL"},
	{zone: "PORTIMAO"},
	{zone: "PORTO"},
	{zone: "PORTO DE MOS"},
	{zone: "PORTO MONIZ (FUNCHAL)"},
	{zone: "PORTO SANTO (FUNCHAL)"},
	{zone: "POVOA DE LANHOSO"},
	{zone: "POVOA DE VARZIM"},
	{zone: "POVOACAO (PONTA DELGADA)"},
	{zone: "PROENCA-A-NOVA"},
	{zone: "REDONDO"},
	{zone: "REGUENGOS DE MONSARAZ"},
	{zone: "RESENDE"},
	{zone: "RIBEIRA BRAVA (FUNCHAL)"},
	{zone: "RIBEIRA DA PENA"},
	{zone: "RIBEIRA GRANDE (PONTA DELGADA)"},
	{zone: "RIO MAIOR"},
	{zone: "S. JOAO DA MADEIRA"},
	{zone: "S. JOAO PESQUEIRA"},
	{zone: "S. PEDRO DO SUL"},
	{zone: "S. ROQUE DO PICO (HORTA)"},
	{zone: "S. VICENTE"},
	{zone: "SABROSA"},
	{zone: "SABUGAL"},
	{zone: "SALVATERRA DE MAGOS"},
	{zone: "SANTA COMBA DAO"},
	{zone: "SANTA CRUZ (FUNCHAL)"},
	{zone: "SANTA CRUZ FLORES (HORTA)"},
	{zone: "SANTA CRUZ GRACIOSA (A. HEROISMO)"},
	{zone: "SANTA MARTA PENAGUIAO"},
	{zone: "SANTANA (FUNCHAL)"},
	{zone: "SANTAREM"},
	{zone: "SANTIAGO DE CACEM"},
	{zone: "SANTO TIRSO"},
	{zone: "SARDOAL"},
	{zone: "SATAO"},
	{zone: "SEIA"},
	{zone: "SEIXAL"},
	{zone: "SEM SIGNIFICADO"},
	{zone: "SERNANCELHE"},
	{zone: "SERPA"},
	{zone: "SERTA"},
	{zone: "SESIMBRA"},
	{zone: "SETUBAL"},
	{zone: "SEVER DO VOUGA"},
	{zone: "SILVES"},
	{zone: "SINES"},
	{zone: "SINTRA"},
	{zone: "SOBRAL DE MONTE AGRACO"},
	{zone: "SOURE"},
	{zone: "SOUSEL"},
	{zone: "TABUA"},
	{zone: "TABUACO"},
	{zone: "TAROUCA"},
	{zone: "TAVIRA"},
	{zone: "TERRAS DE BOURO"},
	{zone: "TOMAR"},
	{zone: "TONDELA"},
	{zone: "TORRE DE MONCORVO"},
	{zone: "TORRES NOVAS"},
	{zone: "TORRES VEDRAS"},
	{zone: "TRANCOSO"},
	{zone: "TROFA"},
	{zone: "VAGOS"},
	{zone: "VALE DE CAMBRA"},
	{zone: "VALENCA"},
	{zone: "VALONGO"},
	{zone: "VALPACOS"},
	{zone: "VELAS (A. HEROISMO)"},
	{zone: "VENDAS NOVAS"},
	{zone: "VIANA DO ALENTEJO"},
	{zone: "VIANA DO CASTELO"},
	{zone: "VIDIGUEIRA"},
	{zone: "VIEIRA DO MINHO"},
	{zone: "VILA DE REI"},
	{zone: "VILA DO BISPO"},
	{zone: "VILA DO CONDE"},
	{zone: "VILA DO PORTO (PONTA DELGADA)"},
	{zone: "VILA FLOR"},
	{zone: "VILA FRANCA CAMPO (PONTA DELGADA)"},
	{zone: "VILA FRANCA DE XIRA"},
	{zone: "VILA NOVA DA BARQUINHA"},
	{zone: "VILA NOVA DE CERVEIRA"},
	{zone: "VILA NOVA DE FOZ COA"},
	{zone: "VILA NOVA DE GAIA"},
	{zone: "VILA NOVA DE OUREM"},
	{zone: "VILA NOVA DE PAIVA"},
	{zone: "VILA NOVA FAMALICAO"},
	{zone: "VILA POUCA DE AGUIAR"},
	{zone: "VILA PRAIA VITORIA (A. HEROISMO)"},
	{zone: "VILA REAL"},
	{zone: "VILA REAL DE SANTO ANTONIO"},
	{zone: "VILA VELHA RODAO"},
	{zone: "VILA VERDE"},
	{zone: "VILA VICOSA"},
	{zone: "VIMIOSO"},
	{zone: "VINHAIS"},
	{zone: "VISEU"},
	{zone: "VIZELA"},
	{zone: "VOUZELA"}
]


zones.each do |attributes|
  Zone.where(zone: attributes[:zone]).first_or_initialize.tap do |z|
  z.save!
  end
end



users=[
{tipo: true, nif: "123456789",nome:"Daniel",apelido: "Carvalho",morada: "Rua Das quinas",localidade: "Sitio ",codpostal: "6666-666",
	pais: "Portugal", telemovel: "919985936",telefone: "253666666",tipocontacto: 1, mail: "dapcarvalho@gmail.com", password: "123456789"}
]




users.each do |attributes|
  User.where(mail: attributes[:mail]).first_or_initialize.tap do |u|
  u.nome = attributes[:nome]
  u.tipo = attributes[:tipo]
  u.nif = attributes[:nif]
  u.apelido = attributes[:apelido]
  u.morada = attributes[:morada]
  u.localidade = attributes[:localidade]
  u.codpostal = attributes[:codpostal]
  u.pais = attributes[:pais]
  u.telemovel = attributes[:telemovel]
  u.telefone = attributes[:telefone]
  u.tipocontacto = attributes[:tipocontacto]
  u.mail = attributes[:mail]
  u.email=attributes[:mail]
  u.password = attributes[:password]
  u.save!
  end
end





